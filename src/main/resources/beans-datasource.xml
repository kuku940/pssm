<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--本示例采用DBCP连接池，应预先把DBCP的jar包复制到工程的lib目录下 -->
    <bean id="dataSourceByDbcp" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc_driverClassName}" />
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
        <!-- 配置连接池的初始值 -->
        <property name="initialSize" value="1" />
        <!-- 连接池的最大值 -->
        <!-- <property name="maxActive" value="500"/> -->
        <!-- 最大空闲时，当经过一个高峰之后，连接池可以将一些用不到的连接释放，一直减少到maxIdle为止 -->
        <!-- <property name="maxIdle" value="2"/> -->
        <!-- 当最小空闲时，当连接少于minIdle时会自动去申请一些连接 -->
        <property name="minIdle" value="1" />
        <property name="maxActive" value="100" />
        <property name="maxIdle" value="20" />
        <property name="maxWait" value="1000" />
    </bean>

    <!--本示例采用Druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
        <!-- 数据库基本信息配置 -->
        <property name="url" value = "${jdbc_url}" />
        <property name="username" value = "${jdbc_username}" />
        <property name="password" value = "${jdbc_password}" />
        <property name="driverClassName" value = "${jdbc_driverClassName}" />
        <property name = "filters" value = "stat,log4j" />
        <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "20" />
        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "1" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value = "60000" />
        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "10" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name = "timeBetweenEvictionRunsMillis" value ="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name = "minEvictableIdleTimeMillis" value ="25200000" />
        <property name = "validationQuery" value = "SELECT 'x'" />
        <property name = "testWhileIdle" value = "true" />
        <property name = "testOnBorrow" value = "false" />
        <property name = "testOnReturn" value = "false" />

        <!--当程序存在缺陷时，申请的连接忘记关闭，这时候，就存在连接泄漏了。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接-->
        <!--配置removeAbandoned对性能会有一些影响，建议怀疑存在泄漏之后再打开。在上面的配置中，如果连接超过30分钟未关闭，就会被强行回收，并且日志记录连接申请时的调用堆栈。-->
        <!--具体查看官网信息：https://github.com/alibaba/druid/wiki/%E8%BF%9E%E6%8E%A5%E6%B3%84%E6%BC%8F%E7%9B%91%E6%B5%8B-->
        <!-- 打开 removeAbandoned 功能 -->
        <property name = "removeAbandoned" value = "true" />
        <!-- 1800 秒，也就是 30 分钟 -->
        <property name = "removeAbandonedTimeout" value ="1800" />
        <!-- 关闭 abanded 连接时输出错误日志 -->
        <property name = "logAbandoned" value = "true" />
    </bean>
</beans>